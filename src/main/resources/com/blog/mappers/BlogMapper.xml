<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 根据命名空间的名称和相同的id作为方法名，生成mapper代理对象 -->
<mapper namespace="com.blog.dao.BlogDao">
	<!-- java对象和数据表的映射，i -->
	<resultMap type="Blog" id="BlogResult">
		<result property="id" column="id"/>
		<result property="title" column="title"/>
		<result property="summary" column="summary"/>
		<result property="releaseDate" column="releaseDate"/>
		<result property="blogCount" column="blogCount"/>
		<result property="clickHit" column="clickHit"/>
		<result property="replyHit" column="replyHit"/>
		<result property="content" column="content"/>
		<result property="keyWord" column="keyWord"/>
		<!-- 关联一个单一的java对象，对象的属性通过select对象来注入 -->
		<association property="blogType" column="typeId" select="com.blog.dao.BlogTypeDao.findById"/>
	</resultMap>
	
	<!-- 获得blog对象，包含发布日期的格式化作为发布日期的字符串，统计数作为blogCount的值-->
	<select id="countList" resultMap="BlogResult">
		select date_format(releaseDate,'%Y年%m月') as releaseDateStr , count(*) as blogCount
		from t_blog group by date_format(releaseDate,'%Y年%m月') 
		order by date_format(releaseDate,'%Y年%m月')  desc
	</select>
	
	<!-- 根据不同的条件查询获得的所有博客 -->
	<select id="list" parameterType="Map" resultMap="BlogResult">
		select * from t_blog
		<where>
			<if test="title!=null and title!=''">
				and title like #{title}
			</if>
			<if test="typeId!=null and typeId!=''">
				and typeId = #{typeId}
			</if>
			<if test="releaseDateStr!=null and releaseDateStr!='' ">
				and date_format(releaseDate,'%Y年%m月')= #{releaseDateStr}
			</if>
		</where>
		order by releaseDate desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<!-- 根据不同的条件获得该条件下匹配的博客的总数量 ,where标签会自动去掉第一个匹配的and字段-->
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from t_blog
		<where>
			<if test="title!=null and title!=''">
				and title like #{title}
			</if>
			<if test="typeId!=null and typeId!=''">
				and typeId = #{typeId}
			</if>
			<if test="releaseDateStr!=null and releaseDateStr!=''">
				and date_format(releaseDate,'%Y年%m月')=#{releaseDateStr}
			</if>
		</where>
	</select>
	
	<!-- 通过id查询所有匹配此id的博客 -->
	<select id="findById" parameterType="Integer" resultMap="BlogResult">
		select * from t_blog where id = #{id}
	</select>
	
	<insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="Blog">
		insert into t_blog values(null,#{title},#{summary},now(),0,0,#{content},#{blogType.id},#{keyWord})
	</insert>
	
	<!-- 更新blog中对应字段的值，默认返回的是影响的行数 -->
	<update id="update" parameterType="Blog">
		update t_blog 
		<set>
			<if test="title!=null and title!=''">
				title=#{title},
			</if>
			<if test="summary!=null and summary!=''">
				summary=#{summary},
			</if>
			<if test="content!=null and content!=''">
				content=#{content},
			</if>
			<if test="blogType.id!=null">
				typeId=#{blogType.id},
			</if>
			<if test="clickHit!=null">
				clickHit=#{clickHit},
			</if>
			<if test="replyHit!=null">
				replyHit=#{replyHit},
			</if>
			<if test="keyWord!=null and keyWord!=''">
				keyWord=#{keyWord},
			</if>
		</set>
		where id=#{id}
	</update>
	
	<!-- 根据id删除指定的博客 -->
	<delete id="delete" parameterType="Integer">
		delete from t_blog where id=#{id}
	</delete>
	
	<!-- 根据类型id获得对应的博客总数 -->
	<select id="getBlogByTypeId" parameterType="Integer" resultType="Integer">
		select count(*) from t_blog where typeId=#{typeId}
	</select>
	
	<!--获得下一篇博客，此处大于小于号需要转义，获得比他大的所有然后限制个数为1 -->
	<select id="getLastBlog" parameterType="Integer" resultMap="BlogResult">
		select * from t_blog where id&lt;#{id} order by id desc limit 1
	</select>
	
	<select id="getNextBlog" parameterType="Integer" resultMap="BlogResult">
		select * from t_blog where id&gt;#{id} order by id asc limit 1
	</select>
</mapper>