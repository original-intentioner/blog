<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 根据命名空间为指定的dao接口生成代理对象，方法就是sql映射的id名 -->
<mapper namespace="com.blog.dao.BlogTypeDao">
	<resultMap type="BlogType" id="blogTypeResult">
		<result property="id" column="id"/>
		<result property="typeName" column="typeName"/>
		<result property="orderNo" column="orderNo"/>
		<result property="blogCount" column="blogCount"/>
	</resultMap>
	
	<!-- 关联查询，统计各个博客类型下对应的博客的数量-->
	<select id="countList" parameterType="String" resultMap="blogTypeResult">
		select t2.id,t2.typeName,count(t1.id) as blogCount  from t_blog t1
		right join t_blogtype t2 on t1.typeId=t2.id
		group by t2.typeName 
		order by t2.orderNo
	</select>
	
	<!-- 根据id获得博客类型的所有值 -->
	<select id="findById" parameterType="Integer" resultMap="blogTypeResult">
		select * from t_blogtype where id = #{id}
	</select>

	<select id="list" parameterType="Map" resultMap="blogTypeResult">
		select * from t_blogtype
		<if test="typeName!=null and typeName!=''">
			where typeName = #{typeName}
		</if>
		order by orderNo
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from t_blogtype 
	</select>
	
	
	<insert id="add" parameterType="BlogType">
		insert into t_blogtype(typeName,orderNo) values(#{typeName},#{orderNo})
	</insert>
	
	
	
	
	<delete id="delete" parameterType="Integer">
		delete from t_blogtype where id=#{id}
	</delete>
	
	<update id="update" parameterType="BlogType" >
		update t_blogtype 
		<set>
			<if test="typeName!=null and typeName!=''">
				typeName=#{typeName},
			</if>
			<if test="orderNo!=null ">
				orderNo=#{orderNo},
			</if>
		</set>
		where id = #{id}
	</update>
	
	
</mapper>