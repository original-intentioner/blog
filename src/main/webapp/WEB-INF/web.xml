<?xml version="1.0" encoding="UTF-8"?>   
<web-app  
        version="3.0"  
        xmlns="http://java.sun.com/xml/ns/javaee"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
             
  <display-name>Blog</display-name>
  
  <!--  -->
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <!--shiro过滤器，对所有的文件都进行过滤  -->
  <filter>
  	<filter-name>shiroFilter</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  	<init-param>
  	<!-- 该值缺省为false,表示生命周期由springApplicationContext管理，设置为true表示由servletContainer管理 -->
  		<param-name>targetFilterLifecycle</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>shiroFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- Spring上下文配置文件,在上下文对象创建的时候，在此文件下加载配置信息 -->
  <!-- 全局的servletContext参数， -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  
  <!-- 配置自动登录的过滤器 -->
	<filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>com.blog.filter.LoginFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/login.jsp</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/main.jsp</url-pattern>
	</filter-mapping>
	
	
	
  
  <!-- 编码过滤器 -->
  <filter>
  	<filter-name>encodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<async-supported>true</async-supported>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>encodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 全局监听器,当web项目创建时引入spring -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- ServletContext监听器，在项目初始化，即ServletContext创建的时候的时候获得各个类别下的总数 -->
  <listener>
  	<listener-class>com.blog.service.impl.InitComponent</listener-class>
  </listener>
  
  <!-- 添加对springmvc的支持 -->
  <servlet>
  	<servlet-name>springMVC</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:spring-mvc.xml</param-value>
  	</init-param>
  	<load-on-startup>5</load-on-startup>
  	<async-supported>true</async-supported>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>springMVC</servlet-name>
  	<url-pattern>*.do</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>springMVC</servlet-name>
  	<url-pattern>*.html</url-pattern>
  </servlet-mapping>

</web-app>
